from . import ffi as ffi, passmanagers as passmanagers
from typing import Any, Optional

def create_pass_manager_builder(): ...

class PassManagerBuilder(ffi.ObjectRef):
    def __init__(self, ptr: Optional[Any] = ...) -> None: ...
    @property
    def opt_level(self): ...
    @opt_level.setter
    def opt_level(self, level: Any) -> None: ...
    @property
    def size_level(self): ...
    @size_level.setter
    def size_level(self, size: Any) -> None: ...
    @property
    def inlining_threshold(self) -> None: ...
    @inlining_threshold.setter
    def inlining_threshold(self, threshold: Any) -> None: ...
    @property
    def disable_unroll_loops(self): ...
    @disable_unroll_loops.setter
    def disable_unroll_loops(self, disable: bool = ...) -> None: ...
    @property
    def loop_vectorize(self): ...
    @loop_vectorize.setter
    def loop_vectorize(self, enable: bool = ...): ...
    @property
    def slp_vectorize(self): ...
    @slp_vectorize.setter
    def slp_vectorize(self, enable: bool = ...): ...
    def populate(self, pm: Any) -> None: ...
