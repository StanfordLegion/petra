from . import CallInstr as CallInstr
from typing import Any

class Visitor:
    def visit(self, module: Any) -> None: ...
    def visit_Function(self, func: Any) -> None: ...
    def visit_BasicBlock(self, bb: Any) -> None: ...
    def visit_Instruction(self, instr: Any) -> None: ...
    @property
    def module(self): ...
    @property
    def function(self): ...
    @property
    def basic_block(self): ...

class CallVisitor(Visitor):
    def visit_Instruction(self, instr: Any) -> None: ...
    def visit_Call(self, instr: Any) -> None: ...

class ReplaceCalls(CallVisitor):
    orig: Any = ...
    repl: Any = ...
    calls: Any = ...
    def __init__(self, orig: Any, repl: Any) -> None: ...
    def visit_Call(self, instr: Any) -> None: ...

def replace_all_calls(mod: Any, orig: Any, repl: Any): ...
